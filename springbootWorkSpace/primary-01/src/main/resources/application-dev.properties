#端口#
server.port=8080 
#服务器 servlet 上下文路径 #
#server.servlet.context-path=/#

#--持久层配置-------------------------------------------------#
#--spring.jpa配置-----------------------#
#show-sql=true 看的见sql 语句
spring.jpa.show-sql=true 
#输出的sql语句 被格式化#
spring.jpa.properties.hibernate.format_sql=true
#database=mysql mysql 数据源
spring.jpa.database=mysql
spring.data.jpa.repositories.enabled=true
spring.data.jpa.repositories.bootstrap-mode=lazy
#update : 第一次启动hibernate 会帮助创建表，以后启动 如果 entity 有更新 那么 表就会跟着自动更新
spring.jpa.hibernate.ddl-auto=update
#--数据源连接--------------------------------#
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.name=druidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/dev
spring.datasource.username=root
spring.datasource.password=ceba

#--druid数据源连接池配置---------------------#
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall#
spring.datasource.druid.filters=stat,wall,slf4j,config
#最大连接池数量#
spring.datasource.druid.max-active=100
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时#
spring.datasource.druid.initial-size=1
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。#
spring.datasource.druid.max-wait=60000
#最小连接池数量#
spring.datasource.druid.min-idle=1
#有两个含义：1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明#
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validation-query=select 'x'
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-open-prepared-statements=50
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#--访问监控页面配置-#
spring.datasource.druid.web-stat-filter.login-username=hua
spring.datasource.druid.web-stat-filter.login-password=hua
spring.datasource.druid.web-stat-filter.url-pattern=/druid/*

#ehcache缓存配置
spring.cache.ehcache.config=ehcache.xml

#jpa 开启二级缓存
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.cache.use_query_cache=true
#指定缓存provider
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.jpa.properties.hibernate.cache.provider_configuration_file_resource_path=ehcache.xml


#logback 日志#
#logback 日志输出目录#
logging.path=F:/wuhaihuaSpace/springboot/
logging.config=logback.xml


#actuator 监控终端#
#监控服务端口#
management.server.port=9090
#监控服务器 servlet 上下文路径#
management.server.servlet.context-path=/
#监控终端的基础访问路径 默认路径为/actuator   #
management.endpoints.web.base-path=/actuator

#info 查看自定义信息#
info.author.name=吴海华
info.author.addr=江夏
#info 查看pom文件中的信息#
info.module.name=@project.name@
info.module.description=@project.des cription@

# 开启 所有 监控  允许访问的监控  默认 [health,info]   注 yml 中 写成 "*"
management.endpoints.web.exposure.include=*
#不需要开放 排除
management.endpoints.web.exposure.exclude=evn,beans

